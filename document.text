await this.page.click("(//div[@id='task-view-modal-project'])[1]")
    await this.page.click("(//li[@role='menuitem'])[1]")
    await this.page.locator('#task-view-modal-projectchipMenu div').first().click();
    await this.page.click("(//div[@id='task-view-modal-project'])[2]");
    await this.page.locator("(//li[normalize-space()='Learning'])[1]").click();
    await this.page.locator('#task-view-modal-projectchipMenu div').first().click();
    await this.page.locator('.jodit-wysiwyg').fill('Test task');
    await this.page.getByRole('button', { name: 'Save' }).click();
    await expect(this.page.locator('div').filter({ hasText: /^Description added$/ }).nth(3)).toBeVisible();
    await this.page.getByRole('tab', { name: 'Work log' }).click();
    await this.page.getByText('15m').click();
    await this.page.getByLabel('Total Time').click();
    await this.page.getByLabel('Total Time').press('ArrowLeft');
    await this.page.getByLabel('Total Time').fill('15m');
    await this.page.fill("//input[@placeholder='DD/MM/YYYY']",`${date}`)
    await this.page.getByRole('button', { name: 'Edit' }).click();
    await expect(this.page.getByRole('list')).toContainText('15m');
    await expect(this.page.getByRole('list')).toContainText('2024-06-04');
    await this.page.getByRole('tab', { name: 'Timeline' }).click();
    await this.page.getByRole('tab', { name: 'Task Info' }).click();
    await expect(this.page.getByLabel('Task Info', { exact: true })).toContainText('20m');
    await this.page.getByRole('button', { name: 'Close' }).click();
    await expect(this.page.locator('#to_do-drop-point')).toContainText('20m');





import { test, expect } from '@playwright/test';
 
test('Extract id attribute and assert its value', async ({ page }) => {
  // Navigate to the page where the element is located
  await page.goto('http://your-website-url');
 
  // Locate the element using XPath and get its id attribute
  const elementHandle = await page.$('//h5[normalize-space()="task to edit"]/ancestor::*[@class="MuiStack-root css-mmtdxd"]');
  const idValue = await elementHandle?.getAttribute('id');
 
  // Assert that the id attribute value is "done-drop-point"
  expect(idValue).toBe('done-drop-point');
});


//span[normalize-space()='15m']/../preceding-sibling::*//p[normalize-space()='2024-06-04']